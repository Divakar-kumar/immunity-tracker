@page
@model AspNetCoreVerifiableCredentials.Pages.IssuerModel
@{
    ViewData["Title"] = "Issuer";
}

<div class="container" style="margin-top: 10px;">
    <div class="row justify-content-center">
        <div class="col-8">
            <form>
                <div class="mb-3">
                    <label for="inputFirstName" class="form-label">First Name *</label>
                    <input type="text" class="form-control" id="inputFirstName" placeholder="Enter your first name" required="required">
                </div>
                <div class="mb-3">
                    <label for="inputLastName" class="form-label">Last Name *</label>
                    <input type="text" class="form-control" id="inputLastName" placeholder="Enter your last name" required="required">
                </div>
                <div class="mb-3">
                    <label for="status" class="form-label">Select Vaccination Status</label>
                    <select class="form-control" name="status" id="statusSelect" aria-label="Default select example" asp-items="Model.Statuses">
                    </select>
                    <label id="statusDescription" style="font-size:0.8em;"></label>
                </div>
                <div class="mb-3 text-center">
                    <button type="button" id="sign-in" class="btn btn-primary">Get Verifiable Credential</button>
                </div>
            </form>
        </div>
    </div>
    <div class="row justify-content-md-center">
        <div class="col col-md-auto text-center">
            <div id="qrText" style="display:none;">
                <p>
                    <img src="authenticator-icon.png" alt="Authenticator icon" style="width: 50px; padding-bottom: 5px;"><br>
                    Scan with Microsoft Authenticator
                </p>
            </div>
            <div >
                <a id="deeplink" style="display:none; margin-top:10px;">Tap to open Authenticator on mobile</a>
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status" id="spinner" style="display:none;">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <div class="row justify-content-md-center">
        <div class="col col-md-auto text-center" id="qrcode"></div>
    </div>
    <div class="row justify-content-md-center">
        <div id="pinCodeText" style="display:none; margin-top:10px;" class="col col-lg-8 text-center bg-info text-dark"></div>
    </div>
    <div class="row justify-content-center">
        <div class="col col-lg-8 text-center">
            <div id="message-wrapper" style="margin-bottom:50px; margin-top:50px; display: none">
                <i class="fas fa-user-check fa-5x" style="color: #228B22; margin-bottom:25px"></i>
                <div id="message"></div>
                <br />
                <div id="payload"></div>
            </div>
        </div>
    </div>
</div>
            

            <script src="qrcode.min.js"></script>
            <script>
                var signIn = document.getElementById('sign-in');
                var signOut = document.getElementById('sign-out');
                var display = document.getElementById('display');
                var qrcode = new QRCode("qrcode", { width: 300, height: 300 });
                var respIssuanceReq = null;
                var spinner= document.getElementById('spinner');
                var statusSelect=document.getElementById('statusSelect');
                var status=null;

                signIn.addEventListener('click', () => {
                    var firstName = document.getElementById('inputFirstName').value;
        var lastName = document.getElementById('inputLastName').value;
        status = document.querySelector('select[name="status"]').value;
        if(lastName.length == 0 || firstName.length == 0) {
            var notyf = new Notyf({
                duration: 3000,
                position: {
                    x: 'right',
                    y: 'top',
                }, 
            });
            notyf.error('Please enter your first and last name');
            return;
        }
        
        spinner.style.display = 'block';
                    fetch(`/api/issuer/issuance-request?status=${status}&firstName=${firstName}&lastName=${lastName}`)
                    .then(function(response) {
                        spinner.style.display='none';
                        response.text()
                        .catch(error => document.getElementById("message").innerHTML = error)
                        .then(function(message) {
                            respIssuanceReq = JSON.parse(message);
                            if( /Android/i.test(navigator.userAgent) ) {
                                console.log(`Android device! Using deep link (${respIssuanceReq.url}).`);
                                window.location.href = respIssuanceReq.url; setTimeout(function () {
                                window.location.href = "https://play.google.com/store/apps/details?id=com.azure.authenticator"; }, 2000);
                            } else if (/iPhone/i.test(navigator.userAgent)) {
                                console.log(`iOS device! Using deep link (${respIssuanceReq.url}).`);
                                window.location.replace(respIssuanceReq.url);
                            } else {
                                console.log(`Not Android or IOS. Generating QR code encoded with ${message}`);
                                qrcode.makeCode(respIssuanceReq.url);
                                document.getElementById('sign-in').style.display = "none";
                                document.getElementById('qrText').style.display = "block";
                                if (respIssuanceReq.pin) {
                                    document.getElementById('pinCodeText').innerHTML = "Pin code: " + respIssuanceReq.pin;
                                    document.getElementById('pinCodeText').style.display = "block";
                                }
                            }
                        }).catch(error => { console.log(error.message); })
                    }).catch(error => { console.log(error.message); })

                    var checkStatus = setInterval(function () {
                        fetch('api/issuer/issuance-response?id=' + respIssuanceReq.id )
                            .then(response => response.text())
                            .catch(error => document.getElementById("message").innerHTML = error)
                            .then(response => {
                                if (response.length > 0) {
                                    console.log(response)
                                    respMsg = JSON.parse(response);
                                    // QR Code scanned, show pincode if pincode is required
                                    if (respMsg.status == 'request_retrieved') {
                                        document.getElementById('message-wrapper').style.display = "block";
                                        document.getElementById('qrText').style.display = "none";
                                        document.getElementById('qrcode').style.display = "none";

                                        if (respMsg.pin) {
                                            document.getElementById('pinCodeText').style.display = "visible";
                                        }
                                        document.getElementById('message').innerHTML = respMsg.message;
                                    }
                                    if (respMsg.status == 'issuance_successful') {
                                        document.getElementById('pinCodeText').style.display = "none";
                                        document.getElementById('message').innerHTML = respMsg.message;
                                        clearInterval(checkStatus);
                                    }
                                    if (respMsg.status == 'issuance_error') {
                                        document.getElementById('pinCodeText').style.display = "none";
                                        document.getElementById('message').innerHTML = "Issuance error occured, did you enter the wrong pincode? Please refresh the page and try again.";
                                        document.getElementById('payload').innerHTML = "Payload: " + respMsg.payload;
                                        clearInterval(checkStatus);
                                    }
                                }
                            })
                    }, 1500); //change this to higher interval if you use ngrok to prevent overloading the free tier service
                })
            </script>
            </div>

